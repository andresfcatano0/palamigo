{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.9211b0f5.chunk.js","sourcesContent":["import React from \"react\";\n\n// instead of passing-in props as an argument, destructuring can be used within \n// the parameters of the function.\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-purple dib br3 pa3 ma2 grow bw2 shadow-5\"> \n      <img alt=\"people\" src={`https://robohash.org/${id}?set=set2`} />\n      <div>\n        {/* javascript expressions have to be wrapped in curly brakets */}\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n \nexport default Card; ","import React from \"react\";\nimport Card from \"./Card\";\n\n// Use destructuring to pass- in xxx instead of props\nconst CardList = ({robots}) => {\n  return (\n    <div>\n      {\n        // second parameter in map is the index\n        robots.map((user, i) => {\n          return ( \n            <Card \n            // Each child in an array should have an unique key prop beacuse if a \n            // card is deleted wihtout one, react will change the entire DOM vs just \n            // removing one card if there is key prop, minimizing the amout of work. \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email} \n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;   ","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return(\n    <div className='pa2'>\n      <input \n        className='pa3 mb3 ba tc '\n        type=\"search\" \n        placeholder='Seach friends' \n        onChange= {searchChange}\n      />\n    </div>\n  );\n}\n\n\n\n\nexport default SearchBox; ","import React from \"react\";\n\n const Scroll = (props) => {\n   return (\n     // Double curly brakets for css styles\n     <div style={{ overflowY: 'scroll', borderTop: \"1px solid white\", height: '800px' }}>\n      {props.children}\n     </div>\n   );\n };\n\n\nexport default Scroll; ","import React , { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n     this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>We have an error!</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\"\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry.js\"\nimport \"./App.css\"\n\nclass App extends Component  {  \n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    }\n  }\n  \n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users })); \n  }\n\n  onSearchChange = (event) => {\n    // Updates the state of search field with whatever is typed\n    this.setState({searchfield: event.target.value})\n  }\n  \n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    });\n    return (\n      <div className='tc'>\n        <h1 className='f1'>Palamigos</h1>\n        <SearchBox searchChange = {this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}